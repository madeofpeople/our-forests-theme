{"version":3,"file":"blocks.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;ACAiB;;;;;;;;;;;;;;;;;ACA0C;AACtB;;AAErC;AACA;AACA;AACA,eAAe,mDAAE;AACjB,qBAAqB,mDAAE;AACvB;AACA;AACA;AACA;AACA,yBAAyB,mDAAE;AAC3B,SAAS;AACT;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,eAAe,mDAAE;AACjB,qBAAqB,mDAAE;AACvB;AACA;AACA,yBAAyB,mDAAE;AAC3B,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,eAAe,mDAAE;AACjB,qBAAqB,mDAAE;AACvB;AACA;AACA;AACA,yBAAyB,mDAAE;AAC3B,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,eAAe,mDAAE;AACjB,qBAAqB,mDAAE;AACvB;AACA;AACA;AACA,yBAAyB,mDAAE;AAC3B,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,IAAI,yEAAsB;AAC1B;AACA;AACA;AACA,EAAE;;;;;;;;;;;;;;;;AC/EyD;AACtB;;AAErC;AACA;AACA;AACA,eAAe,mDAAE;AACjB,qBAAqB,mDAAE;AACvB;AACA;AACA;AACA,YAAY,mDAAE;AACd,YAAY,mDAAE;AACd,YAAY,mDAAE;AACd;AACA;AACA;AACA;AACA,yBAAyB,mDAAE;AAC3B,SAAS;AACT;AACA;AACA,yBAAyB,mDAAE,6EAA6E;AACxG,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,eAAe,mDAAE;AACjB,qBAAqB,mDAAE;AACvB;AACA;AACA;AACA,yBAAyB,mDAAE;AAC3B,SAAS;AACT;AACA;AACA;AACA;AACA;;AAEA;AACA,IAAI,yEAAsB;AAC1B;AACA;AACA;AACA,EAAE;;;;;;;;;;;;ACnDF;;;;;;;;;;;ACAA;;;;;;UCAA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA;WACA,iCAAiC,WAAW;WAC5C;WACA;;;;;WCPA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;;;;ACNA;AACA;AACA;AACA;AACA;AACoB;AACE","sources":["webpack://the-territory/./src/js/blocks/patterns/index.js","webpack://the-territory/./src/js/blocks/variations/index.js","webpack://the-territory/./src/js/blocks/variations/lists.js","webpack://the-territory/./src/js/blocks/variations/paragraph.js","webpack://the-territory/external window [\"wp\",\"blocks\"]","webpack://the-territory/external window [\"wp\",\"i18n\"]","webpack://the-territory/webpack/bootstrap","webpack://the-territory/webpack/runtime/compat get default export","webpack://the-territory/webpack/runtime/define property getters","webpack://the-territory/webpack/runtime/hasOwnProperty shorthand","webpack://the-territory/webpack/runtime/make namespace object","webpack://the-territory/./src/js/blocks/index.js"],"sourcesContent":["","import './lists';\nimport './paragraph';","import { registerBlockVariation } from '@wordpress/blocks';\nimport { __ } from '@wordpress/i18n';\n\nconst variations = [\n    {\n        name: 'list',\n        title: __( 'Basic List', 'the-territory' ),\n        description: __( 'Display a basic list.', 'the-territory' ),\n        isDefault: true,\n        icon: 'editor-ul',\n        attributes: {\n            className: 'basic',\n            placeholder: __( 'Add list items ...', 'the-territory' )\n        },\n        example: {\n            attributes: {\n                className: 'basic',\n            },\n        },\n        scope: [\n            'block',\n            'inserter',\n            'transform'\n        ],\n        isActive: ( blockAttributes, variationAttributes ) =>\n            blockAttributes.className === variationAttributes.className\n    },\n    {\n        name: 'bullet-list-columns',\n        title: __( 'Columned Bullet List', 'the-territory' ),\n        description: __( 'A list displayed in 2 columns.', 'the-territory' ),\n        attributes: {\n            className: 'bullet-list-columns',\n            placeholder: __( 'Add list items ...', 'the-territory' )\n        },\n        icon: 'columns',\n        scope: [\n            'transform'\n        ],\n        isActive: ( blockAttributes, variationAttributes ) =>\n            blockAttributes.className === variationAttributes.className\n    },\n    {\n        name: 'bullet-list',\n        title: __( 'Bullet List', 'the-territory' ),\n        description: __( 'A regular list, with fancy bullets.', 'the-territory' ),\n        icon: 'list-view',\n        attributes: {\n            className: 'bullet-list',\n            placeholder: __( 'Add list items ...', 'the-territory' )\n        },\n        scope: [\n            'transform'\n        ],\n        isActive: ( blockAttributes, variationAttributes ) =>\n            blockAttributes.className === variationAttributes.className\n    },\n    {\n        name: 'icon-list',\n        title: __( 'Icon List', 'the-territory' ),\n        description: __( 'A regular with icon.', 'the-territory' ),\n        icon: 'star-filled',\n        attributes: {\n            className: 'icon-list',\n            placeholder: __( 'Add list items ...', 'the-territory' )\n        },\n        scope: [\n            'transform'\n        ],\n        isActive: ( blockAttributes, variationAttributes ) =>\n            blockAttributes.className === variationAttributes.className\n    }\n];\n\nvariations.forEach( ( variation ) => {\n    registerBlockVariation(\n        'core/list',\n        variation\n    );\n} );","import { registerBlockVariation } from '@wordpress/blocks';\nimport { __ } from '@wordpress/i18n';\n\nconst variations = [\n    {\n        name: 'paragraph',\n        title: __( 'Paragraph', 'the-territory' ),\n        description: __( 'A standard paragraph.', 'the-territory' ),\n        isDefault: true,\n        category: 'text',\n        keywords: [\n            __( 'intro', 'the-territory' ),\n            __( 'paragraph', 'the-territory' ),\n            __( 'sentence', 'the-territory' )\n        ],\n        icon: 'editor-alignleft',\n        attributes: {\n            className: 'ptag',\n            placeholder: __( 'Add content...', 'the-territory' )\n        },\n        example: {\n            attributes: {\n                content: __( 'This is a bock for displaying the opening paragraph, the big idea, the tl;dr.', 'the-territory' )\n            },\n        },\n        scope: [\n            'block',\n            'inserter',\n            'transform'\n        ],\n    },\n    {\n        name: 'lede',\n        title: __( 'Lede', 'the-territory' ),\n        description: __( 'Add opening sentence or paragraph.', 'the-territory' ),\n        icon: 'editor-justify',\n        attributes: {\n            className: 'lede',\n            placeholder: __( 'Add content...', 'the-territory' )\n        },\n        scope: [\n            'transform'\n        ],\n    }\n];\n\nvariations.forEach( ( variation ) => {\n    registerBlockVariation(\n        'core/paragraph',\n        variation\n    );\n} );\n","module.exports = window[\"wp\"][\"blocks\"];","module.exports = window[\"wp\"][\"i18n\"];","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","/**\n * Gutenberg Block JS\n *\n * Import JS for Gutenberg blocks.\n */\nimport './patterns';\nimport './variations';\n"],"names":[],"sourceRoot":""}